
###############################
#       _                     
# _ __ (_) ___ ___  _ __ ___  
#| '_ \| |/ __/ _ \| '_ ` _ \ 
#| |_) | | (_| (_) | | | | | |
#| .__/|_|\___\___/|_| |_| |_|
#|_|     
###############################

# vim: filetype=conf
backend = "glx";
glx-no-stencil = true;
glx-no-rebind-pixmap = true;
#no-fading-destroyed-argb = true;
#use-damage = true;
#xrender-sync-fence = true;
vsync = true;

# These are important. The first one enables the opengl backend. The last one is the vsync method. Depending on the driver you might need to use a different method.
# The other options are smaller performance tweaks that work well in most cases.
# You can find the rest of the options here: https://github.com/chjj/compton/wiki/perf-guide, and here: https://github.com/chjj/compton/wiki/vsync-guide


 #Shadow
shadow = true;			# Enabled client-side shadows on windows.
shadow-radius = 12;		# The blur radius for shadows. (default 12)
shadow-offset-x = 0;		# The left offset for shadows. (default -15)
shadow-offset-y = 0;		# The top offset for shadows. (default -15)
shadow-opacity = 0.7;
shadow-exclude = [
 "! name~=''",
 "class_g = 'Plank'",
];

# The shadow exclude options are helpful if you have shadows enabled. Due to the way compton draws its shadows, certain applications will have visual glitches
# (most applications are fine, only apps that do weird things with xshapes or argb are affected).
# This list includes all the affected apps I found in my testing. The "! name~=''" part excludes shadows on any "Unknown" windows, this prevents a visual glitch with the XFWM alt tab switcher.

# Fading
fading = true; # Fade windows during opacity changes.
fade-delta = 3; # The time between steps in a fade in milliseconds. (default 10).
fade-in-step = 0.03; # Opacity change between steps while fading in. (default 0.028).
fade-out-step = 0.03; # Opacity change between steps while fading out. (default 0.03).
#no-fading-openclose = true; # Fade windows in/out when opening/closing


# Opacity
inactive-opacity = 0.85;
active-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = false;
# inactive-dim = 0.2;
# inactive-dim-fixed = true;

# Opacity rules, do "xprop | grep WM_CLASS" to find class name
opacity-rule = ["100:class_g = 'Firefox'", "100:class_g = 'Chromium'", "100:class_g = 'Polybar'", "100:class_g = 'jetbrains-idea-ce'", "100:class_g = 'Thunderbird'", "100:class_g = 'Evince'", "100:class_g = 'Inkscape'", "100:class_g = 'XScreenSaver'", "100:name *? = 'i3lock'", "85:class_i = 'urxvt'", "100:class_i = 'cmatrixterm'", "85:class_i = 'dropdown'"];

detect-client-opacity = true; # This prevents opacity being ignored for some apps. For example without this enabled my xfce4-notifyd is 100% opacity no matter what.

# Blur
blur-method = "dual_kawase";
blur-strength = 4;
blur-background = false;
blur-background-frame = false;
blur-background-fixed = false;
blur-background-exclude = ["class_g = 'Plank'", "class_g = 'Polybar'"]

#round corners for when we're ready
corner-radius = 12.0;
rounded-corners-exclude = [ "class_g = 'Polybar'" ]; 

# Window type settings
wintypes:
{
  tooltip = { fade = true; shadow = true; opacity = 0.85; };
  dock = { shadow = false;};
  popup_menu = { opacity = 0.9  };
  dropdown_menu = { opacity = 0.9  }
};
